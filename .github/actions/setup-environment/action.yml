name: Setup Environment

inputs:
  FETCH_DEPTH:
    required: false
    type: number
    default: 1
    description: "Git fetch depth (0 for all history)"
  SETUP_NODE:
    required: false
    type: boolean
    default: false
    description: "Set to true to include Node.js setup"
  NODE_VERSION:
    required: false
    type: string
    default: "21"
    description: "Node.js version to install"
  CACHE_KEY_PREFIX:
    required: false
    type: string
    default: "deps"
    description: "Prefix for the cache key"
  INSTALL_DEPENDENCIES:
    required: false
    type: boolean
    default: false
    description: "Set to true to include dependency installation"
  INSTALL_DEV_DEPENDENCIES:
    required: false
    type: boolean
    default: false
    description: "Set to true to include dev dependencies"

runs:
  using: "composite"
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.FETCH_DEPTH }}

    - name: Set Up Node.js
      if: ${{ inputs.SETUP_NODE == 'true' }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.NODE_VERSION }}
        cache: "npm"
        cache-dependency-path: package-lock.json

    - name: Cache Dependencies
      uses: actions/cache@v4
      if: ${{ inputs.SETUP_NODE == 'true' }}
      with:
        path: |
          ${{ inputs.SETUP_NODE == 'true' && '~/.npm' || '' }}
        key: ${{ inputs.CACHE_KEY_PREFIX }}-${{ runner.os }}-node${{ inputs.NODE_VERSION }}-dev${{ inputs.INSTALL_DEV_DEPENDENCIES }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ inputs.CACHE_KEY_PREFIX }}-${{ runner.os }}-node${{ inputs.NODE_VERSION }}-dev${{ inputs.INSTALL_DEV_DEPENDENCIES }}-
          ${{ inputs.CACHE_KEY_PREFIX }}-${{ runner.os }}-node${{ inputs.NODE_VERSION }}-
          ${{ inputs.CACHE_KEY_PREFIX }}-${{ runner.os }}-

    - name: Install Node.js Dependencies
      if: ${{ inputs.SETUP_NODE == 'true' && inputs.INSTALL_DEPENDENCIES == 'true' }}
      run: |
        if [[ "${{ inputs.INSTALL_DEV_DEPENDENCIES }}" == 'true' ]]; then
          npm ci
        else
          export NODE_ENV=production
          npm ci --omit=dev
        fi
      shell: bash

    - name: Run Build Script
      run: npm run build
      shell: bash
